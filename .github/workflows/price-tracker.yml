name: Price Tracker Cron

on:
#   schedule:
#     # Exécution toutes les 6 heures
#     - cron: '0 7,12,17,21 * * *'
  workflow_dispatch:  # Permet l'exécution manuelle

jobs:
  track-prices:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install uv
        run: |
          pip install uv
          uv --version

      - name: Create venv
        run: |
          uv venv
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt

      - name: Create service account file
        run: |
          echo '${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}' > service-account.json

      - name: Create .env file
        run: |
          echo "GOOGLE_SHEETS_URL=${{ secrets.GOOGLE_SHEETS_URL }}" >> .env
          echo "GOOGLE_SHEETS_CREDENTIALS_FILE=service-account.json" >> .env
          echo "SHEET_NAME=${{ secrets.SHEET_NAME }}" >> .env
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "SMTP_FROM_EMAIL=${{ secrets.SMTP_FROM_EMAIL }}" >> .env
          echo "NOTIFICATION_EMAIL=${{ secrets.NOTIFICATION_EMAIL }}" >> .env
          echo "MIN_PRICE_DIFF_PERCENT=${{ secrets.MIN_PRICE_DIFF_PERCENT }}" >> .env

      - name: Run price tracker
        run: uv run src/main.py --sheet-name test

      - name: Cleanup sensitive files
        if: always()
        run: |
          rm -f service-account.json
          rm -f .env
